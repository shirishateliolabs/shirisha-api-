{
	"info": {
		"_postman_id": "f66df5ee-49c1-48f4-b9ae-e851b4b2fd85",
		"name": "DATA DREVENT TESTING",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24146049"
	},
	"item": [
		{
			"name": "create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"verify if response code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"verify if response code is Created\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"pm.test(\"verify if response body is presest\", function () {\r",
							"    pm.response.to.have.body();\r",
							"});\r",
							"pm.test(\"verify if response body is JSON\", function () {\r",
							"    pm.response.to.have.json.body();\r",
							"});\r",
							"pm.test(\"Verify if Content-Type = application/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
							"});\r",
							"\r",
							"  \r",
							" pm.test(\"Verify if response body contains mandatory strings\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"name\");\r",
							"    pm.expect(pm.response.text()).to.include(\"job\");\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"    pm.expect(pm.response.text()).to.include(\"createdAt\");\r",
							"});\r",
							"pm.test(\"Verify if response time is less than 1000 milli-seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\r\n\r\n{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"job\": \"{{$randomJobTitle}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"verify if response code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"verify if response code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"verify if response code is ok\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"verify if response body is presest\", function () {\r",
							"    pm.response.to.have.body();\r",
							"});\r",
							"pm.test(\"verify if response body is JSON\", function () {\r",
							"    pm.response.to.have.json.body();\r",
							"});\r",
							"pm.test(\"Verify if Content-Type = application/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
							"});\r",
							"pm.test(\"Verify if response body contains mandatory strings\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"name\");\r",
							"    pm.expect(pm.response.text()).to.include(\"job\");\r",
							"    pm.expect(pm.response.text()).to.include(\"updatedAt\");\r",
							"});\r",
							"pm.test(\"Verify if response time is less than 1000 milli-seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{$randomFirstName}}\",\r\n    \"job\": \"{{$randomJobType}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/99",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"99"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"verify if response code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"pm.test(\"verify if response code No Content\", function () {\r",
							"    pm.response.to.have.status(\"No Content\");\r",
							"});\r",
							"pm.test(\"verify if response body is presest\", function () {\r",
							"    pm.response.to.have.body();\r",
							"});\r",
							"pm.test(\"Verify if response time is less than 1000 milli-seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://reqres.in/api/users/{{$randomInt}}",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"{{$randomInt}}"
					]
				}
			},
			"response": []
		}
	]
}